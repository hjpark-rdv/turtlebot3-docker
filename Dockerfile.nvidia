FROM nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04

# USE BASH
SHELL ["/bin/bash", "-c"]

ARG username=rosmaster
ARG groupid=1000
ARG userid=1000
ARG rosdistro="kinetic"

ENV ROS_DISTRO=$rosdistro

# RUN LINE BELOW TO REMOVE debconf ERRORS (MUST RUN BEFORE ANY apt-get CALLS)
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

### see https://github.com/osrf/docker_images/blob/1a1c56d93f309d10c412c6323db5791fc1b23d1b/ros/kinetic/ubuntu/xenial/ros-core/Dockerfile
# install packages
RUN apt-get update && apt-get install -q -y \
    dirmngr \
    gnupg2 \
    lsb-release \
    vim \
    ssh \
    && rm -rf /var/lib/apt/lists/*

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    && rm -rf /var/lib/apt/lists/*

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# bootstrap rosdep
RUN rosdep init \
    && rosdep update

# install ros packages
RUN apt-get update && apt-get install -y \
    ros-kinetic-ros-core=1.3.2-0* \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils

#### copy ros_entrypoint.sh
COPY ./ros_entrypoint.sh /
RUN chmod +x /ros_entrypoint.sh

#### create entrypoint
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]

#### 6.1.2
RUN apt-get install -y ros-kinetic-desktop-full ros-kinetic-rqt-*
RUN apt-get install -y python-rosinstall
RUN source ros_entrypoint.sh \
    && mkdir -p /catkin_ws/src \
    && cd /catkin_ws/src \
    && catkin_init_workspace \
    && cd /catkin_ws \
    && catkin_make

#### 6.1.3
RUN  apt-get update -y && apt-get install -y ros-kinetic-joy \
    ros-kinetic-teleop-twist-joy ros-kinetic-teleop-twist-keyboard \
    ros-kinetic-laser-proc ros-kinetic-rgbd-launch \
    ros-kinetic-depthimage-to-laserscan ros-kinetic-rosserial-arduino \
    ros-kinetic-rosserial-python ros-kinetic-rosserial-server \
    ros-kinetic-rosserial-client ros-kinetic-rosserial-msgs ros-kinetic-amcl \
    ros-kinetic-map-server ros-kinetic-move-base ros-kinetic-urdf \
    ros-kinetic-xacro ros-kinetic-compressed-image-transport \
    ros-kinetic-rqt-image-view ros-kinetic-gmapping ros-kinetic-navigation \
    ros-kinetic-interactive-markers
RUN source ros_entrypoint.sh \
    && cd /catkin_ws/src \
    && git clone https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git \
    && git clone https://github.com/ROBOTIS-GIT/turtlebot3.git \
    && cd /catkin_ws \
    && catkin_make

#### 6.1.4
RUN apt-get install -y net-tools && apt-get install -y iputils-ping

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# setup user env at the end
# -m option creates a fake writable home folder
RUN groupadd -g $groupid $username \
    && useradd -m -r -u $userid -g $username $username
USER $username
RUN echo "source /opt/ros/kinetic/setup.bash" >> /home/$username/.bashrc
#    && echo "export ROS_HOSTNAME=localhost" >> ~/.bashrc
RUN echo "source /catkin_ws/devel/setup.bash" >> /home/$username/.bashrc
